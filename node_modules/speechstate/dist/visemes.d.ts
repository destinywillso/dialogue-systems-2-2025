export declare const visemesMachine: import("xstate").StateMachine<{
    queue: number[];
}, {
    type: "VISEME";
    value: any;
}, {}, never, never, never, never, "Init", string, {}, {}, import("xstate").EventObject, import("xstate").MetaObject, {
    readonly context: {
        readonly queue: [];
    };
    readonly initial: "Init";
    readonly states: {
        readonly Init: {
            readonly on: {
                readonly VISEME: readonly [{
                    readonly guard: ({ event }: import("xstate/dist/declarations/src/guards").GuardArgs<{
                        queue: number[];
                    }, {
                        type: "VISEME";
                        value: any;
                    }>) => boolean;
                    readonly actions: readonly [import("xstate").ActionFunction<{
                        queue: number[];
                    }, {
                        type: "VISEME";
                        value: any;
                    }, {
                        type: "VISEME";
                        value: any;
                    }, undefined, never, never, never, never, never>];
                }];
            };
        };
    };
}>;
//# sourceMappingURL=visemes.d.ts.map